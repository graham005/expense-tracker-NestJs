services:
  expensetrackerdb:
    image: postgres:15-alpine
    container_name: expensetrackerdb
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: yh3U6aUizVJTPCyr1ftnnbaZatQmCyM5
      POSTGRES_DB: expense_tracker_db_nryn
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  expense-tracker-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense-tracker-app
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=development
      - PORT=9000
      - DBHOST=expensetrackerdb
      - DBPORT=5432
      - DBNAME=expense_tracker_db_nryn
      - DBUSER=user
      - DBPASSWORD=yh3U6aUizVJTPCyr1ftnnbaZatQmCyM5
      # - DBNAME=postgres
      # - DBUSER=postgres
      # - DBPASSWORD=secretpassword
      - DB_SYNC=true
      - DB_LOGGING=true
      - REDIS_URL=redis://red-d15jc5p5pdvs73fciee0:NXxqBllK3Qh4Dai2qW6BlLUnRGsqiBy7@red-d15jc5p5pdvs73fciee0:6379
      # - REDIS_URL=redis://:${REDIS_PASSWORD:-secretpassword}@redis:6379
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET:-secretkey}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION_TIME:-15m}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET:-secretkey}
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION_TIME:-7d}
      - THROTTLE_TTL=${THROTTLE_TTL:-6000}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT:-100}
    depends_on:
      redis:
        condition: service_healthy
      expensetrackerdb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
volumes:
  pgdata:
    name: expense-tracker-pgdata
    driver: local
  redis-data:
    name: redis-cache-data
    driver: local

networks:
  app-network:
    driver: bridge